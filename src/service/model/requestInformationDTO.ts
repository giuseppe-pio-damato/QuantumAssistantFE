/**
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

export interface RequestInformationDTO {
  nonFunctionalRequirement: RequestInformationDTO.NonFunctionalRequirementEnum;
  rateOfNonFunctionalRequirement?: number;
  architectureFamily: RequestInformationDTO.ArchitectureFamilyEnum;
  numOfResults: number;
}

export namespace RequestInformationDTO {
  export type NonFunctionalRequirementEnum =
    'SCALABILITY'
    | 'STABILITY_MODEL'
    | 'ALGORITHM_EFFICIENCY'
    | 'COMPUTER_SECURITY'
    | 'SECURITY'
    | 'PERFORMANCE_ENGINEERING'
    | 'RELIABILITY_ENGINEERING'
    | 'FAULT_TOLERANCE'
    | 'PERFORMANCE'
    | 'INTEROPERABILITY'
    | 'SIMPLICITY_THEORY'
    | 'SOFTWARE_TESTABILITY'
    | 'ADAPTABILITY'
    | 'SOFTWARE_PORTABILITY'
    | 'DEPENDABILITY'
    | 'COUPLING'
    | 'FLEXIBILITY'
    | 'MAINTAINABILITY'
    | 'RELIABILITY'
    | 'REUSABILITY'
    | 'AUTOMATED_MANAGEMENT'
    | 'BACKWARD_COMPATIBILITY'
    | 'DATA_CONSISTENCY'
    | 'EXTENSIBILITY'
    | 'AVAILABILITY'
    | 'DISTRIBUTION'
    | 'LOAD_BALANCING'
    | 'ELASTICITY'
    | 'EXPRESSIVITY'
    | 'ISOLATION'
    | 'OPERABILITY'
    | 'RESILIENCE'
    | 'ROBUSTNESS'
    | 'ROBUSTNESS_COMPUTER_SCIENCE'
    | 'SERVICEABILITY'
    | 'RESP0NSE_TIME'
    | 'USABILITY';
  export const NonFunctionalRequirementEnum = {
    SCALABILITY: 'SCALABILITY' as NonFunctionalRequirementEnum,
    STABILITYMODEL: 'STABILITY_MODEL' as NonFunctionalRequirementEnum,
    ALGORITHMEFFICIENCY: 'ALGORITHM_EFFICIENCY' as NonFunctionalRequirementEnum,
    COMPUTERSECURITY: 'COMPUTER_SECURITY' as NonFunctionalRequirementEnum,
    SECURITY: 'SECURITY' as NonFunctionalRequirementEnum,
    PERFORMANCEENGINEERING: 'PERFORMANCE_ENGINEERING' as NonFunctionalRequirementEnum,
    RELIABILITYENGINEERING: 'RELIABILITY_ENGINEERING' as NonFunctionalRequirementEnum,
    FAULTTOLERANCE: 'FAULT_TOLERANCE' as NonFunctionalRequirementEnum,
    PERFORMANCE: 'PERFORMANCE' as NonFunctionalRequirementEnum,
    INTEROPERABILITY: 'INTEROPERABILITY' as NonFunctionalRequirementEnum,
    SIMPLICITYTHEORY: 'SIMPLICITY_THEORY' as NonFunctionalRequirementEnum,
    SOFTWARETESTABILITY: 'SOFTWARE_TESTABILITY' as NonFunctionalRequirementEnum,
    ADAPTABILITY: 'ADAPTABILITY' as NonFunctionalRequirementEnum,
    SOFTWAREPORTABILITY: 'SOFTWARE_PORTABILITY' as NonFunctionalRequirementEnum,
    DEPENDABILITY: 'DEPENDABILITY' as NonFunctionalRequirementEnum,
    COUPLING: 'COUPLING' as NonFunctionalRequirementEnum,
    FLEXIBILITY: 'FLEXIBILITY' as NonFunctionalRequirementEnum,
    MAINTAINABILITY: 'MAINTAINABILITY' as NonFunctionalRequirementEnum,
    RELIABILITY: 'RELIABILITY' as NonFunctionalRequirementEnum,
    REUSABILITY: 'REUSABILITY' as NonFunctionalRequirementEnum,
    AUTOMATEDMANAGEMENT: 'AUTOMATED_MANAGEMENT' as NonFunctionalRequirementEnum,
    BACKWARDCOMPATIBILITY: 'BACKWARD_COMPATIBILITY' as NonFunctionalRequirementEnum,
    DATACONSISTENCY: 'DATA_CONSISTENCY' as NonFunctionalRequirementEnum,
    EXTENSIBILITY: 'EXTENSIBILITY' as NonFunctionalRequirementEnum,
    AVAILABILITY: 'AVAILABILITY' as NonFunctionalRequirementEnum,
    DISTRIBUTION: 'DISTRIBUTION' as NonFunctionalRequirementEnum,
    LOADBALANCING: 'LOAD_BALANCING' as NonFunctionalRequirementEnum,
    ELASTICITY: 'ELASTICITY' as NonFunctionalRequirementEnum,
    EXPRESSIVITY: 'EXPRESSIVITY' as NonFunctionalRequirementEnum,
    ISOLATION: 'ISOLATION' as NonFunctionalRequirementEnum,
    OPERABILITY: 'OPERABILITY' as NonFunctionalRequirementEnum,
    RESILIENCE: 'RESILIENCE' as NonFunctionalRequirementEnum,
    ROBUSTNESS: 'ROBUSTNESS' as NonFunctionalRequirementEnum,
    ROBUSTNESSCOMPUTERSCIENCE: 'ROBUSTNESS_COMPUTER_SCIENCE' as NonFunctionalRequirementEnum,
    SERVICEABILITY: 'SERVICEABILITY' as NonFunctionalRequirementEnum,
    RESP0NSETIME: 'RESP0NSE_TIME' as NonFunctionalRequirementEnum,
    USABILITY: 'USABILITY' as NonFunctionalRequirementEnum
  };
  export type ArchitectureFamilyEnum = 'CLASSIC_ARCHITECTURE' | 'QUANTUM_COMPUTING';
  export const ArchitectureFamilyEnum = {
    CLASSICARCHITECTURE: 'CLASSIC_ARCHITECTURE' as ArchitectureFamilyEnum,
    QUANTUMCOMPUTING: 'QUANTUM_COMPUTING' as ArchitectureFamilyEnum
  };
}
